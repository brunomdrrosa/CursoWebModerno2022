// Crie uma fun√ß√£o que retorna a string "Ol√°, " concatenada com um argumento text (a ser passado para a
// fun√ß√£o) e com ponto de exclama√ß√£o "!" no final.
// Exemplo:
// cumprimentar("Leonardo") // retornar√° "Ol√°, Leonardo!"

function saudacao(nome) {
    return `Ol√°, ${nome}!`;
}
console.log(saudacao("Bruno"))

// Escreva uma fun√ß√£o que receba a idade de uma pessoa em anos e retorne a mesma idade em dias.
// üìï Obs: considere que um ano tem 365 dias. Desconsidere anos bissextos (com 366 dias) e
// desconsidere tamb√©m dias decorridos desde o √∫ltimo anivers√°rio.
// Exemplo:
// converterIdadeEmAnosParaDias(25) // retornar√° 9125

function converterIdadeParaDias(idade) {
    return idade * 365;
}
console.log(converterIdadeParaDias(25))

// Desenvolva uma fun√ß√£o que recebe dois par√¢metros, um √© a quantidade de horas trabalhadas por um
// funcion√°rio num m√™s, e o quanto ele recebe por hora. O retorno da fun√ß√£o deve ser a string "Sal√°rio igual a R$
// X", em que X √© o quanto o funcion√°rio ganhou no m√™s.
// Exemplo:
// calcularSalario(150, 40.5) // retornar√° "Sal√°rio igual a R$ 6075"
function calcularSalario(horas, ganho) {
    return `Sal√°rio igual a R$ ${horas * ganho}`;
}
console.log(calcularSalario(150, 40.5))

// Crie uma fun√ß√£o que recebe um n√∫mero (de 1 a 12ÓÇÇ e retorne o m√™s correspondente como uma string. Por
// exemplo, se a entrada for 2, a fun√ß√£o dever√° retornar "fevereiro", pois este √© o 2¬∞ m√™s.
// Exemplos:
// nomeDoMes(1) // retornar√° "janeiro"
function nomeMes(numero) {
    const meses = ["janeiro", "fevereiro", "mar√ßo", "abril", "maio", "junho", "julho", "agosto", "setembro",
    "outubro", "novembro", "dezembro"];
    return meses[--numero];
}
console.log(nomeMes(8))

// Crie uma fun√ß√£o que receba dois n√∫meros e retorne se o primeiro √© igual ao segundo.
// Exemplos:
// maiorOuIgual(0, 0) // retornar√° true
// maiorOuIgual(0, "0") // retornar√° false
// maiorOuIgual(5, 1) // retornar√° false
function maiorOuIgual(n1, n2) {
    if (n1 === n2) {
        return true;
    }  else {
        return false;
    }
}
console.log(maiorOuIgual(0, 0))

// Escreva uma fun√ß√£o que receba um valor booleano ou num√©rico. Se o par√¢metro fornecido for booleano, o
// retorno da fun√ß√£o dever√° ser o inverso. Por exemplo, se a entrada for false, retornar√° true. Se o par√¢metro for
// num√©rico, o retorno ser√° o n√∫mero inverso. Por exemplo, se for fornecido 1, o retorno ser√° -1. Se o par√¢metro
// de entrada n√£o for de nenhum dos tipo acima, retorne "booleano ou n√∫mero esperados, mas o par√¢metro √© do
// tipo ...".
// Exemplos:
// inverso(true) // retornar√° false
// inverso("6") // retornar√° "booleano ou n√∫mero esperados, mas o par√¢metro √© do tipo string"
// inverso(-2000) // retornar√° 2000
// inverso("programa√ß√£o") // retornar√° "booleano ou n√∫meros esperado, mas o par√¢metro √© do tipo string"
function inverso(valor) {
  if (typeof valor === "boolean") {
    return !valor;
  } else if (typeof valor === "number") {
    return -valor;
  } else {
    return "booleano ou n√∫mero esperados, mas o par√¢metro √© do tipo " + typeof valor;
  }
}
console.log(inverso(true));